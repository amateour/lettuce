{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@amateour/lettuce/webpack/universalModuleDefinition","webpack://@amateour/lettuce/./src/argument.ts","webpack://@amateour/lettuce/./src/help.ts","webpack://@amateour/lettuce/./src/lettuce.ts","webpack://@amateour/lettuce/./src/parserScheme.ts","webpack://@amateour/lettuce/./src/type.ts","webpack://@amateour/lettuce/./src/verifyErrors.ts","webpack://@amateour/lettuce/webpack/bootstrap","webpack://@amateour/lettuce/webpack/runtime/define property getters","webpack://@amateour/lettuce/webpack/runtime/global","webpack://@amateour/lettuce/webpack/runtime/hasOwnProperty shorthand","webpack://@amateour/lettuce/webpack/runtime/make namespace object","webpack://@amateour/lettuce/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@amateour/lettuce\"] = factory();\n\telse\n\t\troot[\"@amateour/lettuce\"] = factory();\n})(self, function() {\nreturn ","import * as AR from '../functions/arguments';\nimport * as VA from '../functions/validator';\nimport * as VE from '../functions/verifyErrors';\nimport {validate} from \"./help\";\nimport {exception} from './verifyErrors'\n\n/**\n *\n * Response messages due to validation failure\n */\nconst messageArgument: AR.MessageArgument = {\n    validation: () => ({\n        message: `validation_custom`\n    }),\n    required: () => ({\n        message: \"required_field\"\n    }),\n    min: (props) => ({\n        message: \"minimum_characters\",\n        value: props.validValue\n    }),\n    max: (props) => ({\n        message: \"maximum_characters\",\n        value: props.validValue\n    }),\n    strict: (props) => ({\n        message: \"{key}_expected_data_type_{type}\"\n            .replace('{key}', props.key)\n            .replace('{type}', props.type)\n            .toLowerCase()\n    })\n}\n\nfunction ejectMessage(key: string, props: any): AR.MessageArgumentResponse | string {\n\n    if (props.message && key) {\n        if (typeof props.message == 'string') return props.message;\n        if (props.message[key]) return props.message;\n    }\n\n    switch (key) {\n        case 'validation': return messageArgument.validation();\n        case 'required': return messageArgument.required();\n        case 'min': return messageArgument.min(props);\n        case 'max': return messageArgument.max(props);\n        case 'strict': return messageArgument.strict(props);\n        default:\n            throw 'non-specific validation function: undefined response message'\n    }\n}\n\n/**\n *  list of validation functions\n *\n * @param funcArguments -\n */\nconst funcArguments: AR.funcArguments = {\n    /**\n     *  * custom validation, for the data type specified in the argument\n     *\n     * @example\n     * ```json\n     * {\n     *    email: {\n     *    type: Sandwich.String, validation: (value: string) => typeof value == 'string'\n     *  }\n     * }\n     * ```\n     * @param validValue -\n     * @param value -\n     */\n    validation: ({validValue, value}) => validValue(value),\n    /**\n     * Validate value max\n     *\n     * @param type -\n     * @param validValue -\n     * @param value -\n     */\n    max: ({type, validValue, value}) => {\n        if (typeof value === 'number'){\n            return (value ?? 0) <= (validValue ?? 0);\n        } else {\n            const len = (type?.length ?? 0) ?? (type?.toString()?.length ?? 0);\n            return len <= (validValue ?? 0);\n        }\n\n    },\n    /**\n     * Validate value min\n     *\n     * @param type -\n     * @param validValue -\n     * @param value -\n     */\n    min: ({type, validValue, value}) => {\n        if (typeof value === 'number'){\n            return (validValue ?? 0) >= (validValue ?? 0);\n        } else {\n            const len = (type?.length ?? 0) ?? (type?.toString()?.length ?? 0);\n            return len >= (validValue ?? 0);\n        }\n    },\n    /**\n     * validate value required\n     *\n     * @param validValue -\n     * @param value -\n     */\n    required: ({validValue, value}) => validValue ? (!!value || value === 0) : true,\n    /**\n     * Validate value type\n     *\n     * @param value -\n     * @param func -\n     * @param scheme -\n     */\n     type: (value, func, scheme) => {\n        const list_type = ['String', 'Number', 'Object'];\n\n        switch (func.name) {\n            case 'Array': return func.from(value);\n            default:\n                if (list_type.includes(func.name)){\n                    return new func(value)\n                }\n                return func(value, scheme);\n        }\n    },\n    /**\n     * Strictly validates the value of a data type\n     *\n     * @param strict - true to validate or false not to validate strict mode\n     * @param type - Array\n     * @param key - data (occupation)\n     * @param value - `Developer`\n     */\n    validStrict: (strict, type, key, value) => {\n        const valid = validate.get(type);\n\n        if (strict && valid) {\n            !valid(value) ? exception({\n                message: \"args_validation_errors\",\n                errors: [{\n                    [key]: [messageArgument.strict({key, type})]\n                }]\n            }, 400): true\n        }\n    }\n}\n\n/**\n *\n * @param key -\n * @param props -\n */\nfunction validArguments(key: string, props: any): boolean {\n    switch (key) {\n        case 'required': return funcArguments.required(props);\n        case 'min': return funcArguments.min(props);\n        case 'max': return funcArguments.max(props);\n        case 'validation': return funcArguments.validation(props);\n        default:\n            throw 'non-specific validation function'\n    }\n}\n\n/**\n * Validate a data type\n *\n * @param value - value to validate \"Developer\"\n * @param key - value key (occupation)\n * @param scheme - scheme validation\n * ```json\n * {type: String}\n * ```\n */\nasync function validType ({value, key, scheme}: AR.compareProps): Promise<any> {\n    const type: any = scheme['type'];\n    const strict = scheme['strict'];\n    const required = scheme['required'];\n\n    if (type) {\n        const name = type.name;\n        required && value ? funcArguments.validStrict(strict, name, key, value): null;\n        if (value === null || value === undefined) return value;\n        return funcArguments.type(value, type, scheme);\n    } else {\n        exception({message: `${key} => ${value} no data type`}, 500);\n    }\n}\n\n/**\n * Validate a schema against a value\n *\n * @param props - data\n * @param type - data type to validate example String\n * @param validValue - value of validation\n * @param keyValid - key main\n */\nfunction validData(\n    props: AR.compareProps, type: any, validValue: any, keyValid: keyof AR.MessageArgument\n): Promise<AR.MessageArgumentResponse | boolean> {\n    return new Promise((resolve) => {\n\n        const {value, scheme, message, key: keyMain} = props;\n\n        if(!validArguments(keyValid,{validValue, value, type, scheme})) {\n            resolve(ejectMessage(keyValid, {validValue, value, type, keyValid, keyMain, message}));\n        }\n\n        resolve(false);\n    })\n}\n\n/**\n * Validate a schema against a value\n *\n * @param props - data\n * @param type - data type to validate example String\n */\nasync function validExtractArgument (\n    props: AR.compareProps, type: any\n): Promise<(AR.MessageArgumentResponse | boolean)[]> {\n    const validResponse = [];\n    const {scheme} = props;\n\n    /**\n     *\n     */\n    if(scheme['required']) {\n        const resp = await validData(props, type, scheme['required'], 'required')\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['min']){\n        const resp = await validData(props, type, scheme['min'], 'min');\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['max']) {\n        const resp = await validData(props, type, scheme['max'], 'max');\n        if(resp) validResponse.push(resp);\n    }\n\n    /**\n     *\n     */\n    if(scheme['validation']) {\n        const resp =await validData(props, type, scheme['validation'], 'validation')\n        if(resp) validResponse.push(resp)\n    }\n\n    return validResponse;\n}\n\n/**\n * validate Message\n *\n * @param errors -\n */\nasync function validRespArgument (errors: (AR.MessageArgumentResponse | boolean)[]): Promise<boolean> {\n    return !errors.length;\n}\n\n/**\n * Validate an argument schema\n *\n * @param props - data\n *\n * @example\n * ```json\n * {\n *     value: \"example@sandwich.com\"\n *     key: \"email\"\n *     scheme: {type: Sandwich.String, strict: true}\n * }\n * ```\n */\nasync function validArgument (props: AR.compareProps): Promise<AR.validArgumentResp> {\n\n    const type =  await validType(props);\n    const errors = await validExtractArgument(props, type);\n    const success = await validRespArgument(errors);\n\n    return {errors: errors, success, value: type}\n}\n\n/**\n * Extract the defined value from the req or in the schema\n * (any value passed by req will be replaced by the value is defined in the schema)\n *\n * @param reqBody - data body\n * @param scheme -\n * @param key - field key to validate\n */\nfunction getValue(reqBody: { [index: string | number]: any }, scheme: VA.scheme, key: string | number): any {\n    const definedValue = scheme['value'] ?? reqBody[key];\n    return definedValue instanceof Function ? definedValue() : definedValue;\n}\n\n/**\n * This function validates all body data specified in the arguments\n *\n * @param valueOf - true stops returning the data to its primitive value of its instance\n * @param reqBody - request body\n * ```json\n * {email: \"example@sandwich.com\"}\n * ```\n * @param schemes - schemes of validation `{ email: {type: Sandwich.String, strict: true} }`\n */\nexport async function argument(\n    valueOf: boolean, reqBody: object, schemes?: VA.schemes\n): Promise<AR.argumentProps> {\n    const resp = {};\n    const body = {};\n    const errors: VE.ErrorStatus[] = []\n\n    if(!schemes) exception({message: `schemes is ${schemes}`}, 500)\n\n    for (const key in schemes) {\n        const scheme = schemes[key] ?? null;\n        if(scheme) {\n\n            const validated = await validArgument({\n                value: getValue(reqBody, scheme, key),\n                key: key,\n                message: scheme['message'] ?? null,\n                scheme: scheme\n            });\n\n            Object.defineProperty(resp, key, {\n                enumerable: true,\n                value: validated\n            });\n\n            Object.defineProperty(body, key, {\n                enumerable: true,\n                value: valueOf || !validated.value ? validated.value : validated.value.valueOf()\n            });\n\n            if (validated.errors.length) {\n                errors.push({[key]: validated.errors})\n            }\n\n        }\n    }\n\n    return {\n        argument: resp,\n        body,\n        errors\n    };\n}\n","import * as SW from '../functions/help';\n\n/**\n * Identify if it is running in a browser\n */\nexport const isBrowser: () => boolean = () => typeof window !== 'undefined'\n    && ({}).toString.call(window) === '[object Window]';\n\n/**\n * Identify if it is running in a nodejs\n */\nexport const isNode: () => boolean = () => typeof global !== \"undefined\"\n    && ({}).toString.call(global) === '[object global]';\n\n/**\n * validate if it is an array\n *\n * @param elm - element validation\n * @returns boolean\n */\nexport function isArray(elm: any): boolean {\n    return Array.isArray(elm);\n}\n\n/**\n * validate if it is an objet\n *\n * @param elm - element validation\n * @returns boolean\n */\nexport function isObject(elm: any): boolean {\n    return elm instanceof Object;\n}\n\n/**\n * validate if it is an string\n *\n * @param elm - element validation\n * @returns boolean\n */\nexport function isString(elm: any): boolean {\n    return typeof elm === \"string\";\n}\n\n/**\n * validate if it is an number\n *\n * @param elm - element validation\n * @returns boolean\n */\nexport function isNumber(elm: any): boolean {\n    return typeof elm === \"number\";\n}\n\n/**\n * Functions validations (isArray, isString)\n *\n */\nexport const validate = new Map<string, SW.isValid>();\nvalidate.set('Array', isArray);\nvalidate.set('String', isString);\nvalidate.set('Number', isNumber);\nvalidate.set('Object', isObject);\nvalidate.set('Browser', isBrowser);\nvalidate.set('Browser', isNode);\n\n","import {argument} from \"./argument\";\nimport {verifyErrors} from \"./verifyErrors\";\nimport Types from \"./type\";\nimport {\n    ParserSchemeFunction,\n    HandlerParserSchemes,\n    ValidatorsClass,\n    valuesArgs,\n    schemes,\n    valueOf\n} from \"../functions/validator\";\n\n/**\n * Analyze the values provided according to your schema.\n *\n * @param valueOf - Determines how validated arguments and parameters are extracted.\n * @param schemes - schemes\n * ```json\n * {\n *     email: {type: Sandwich.String, required: true, strict: true},\n *     password: {type: Sandwich.String, required: true, strict: true, min: 8}\n * }\n * ```\n * @param values - data body request.\n * @returns HandlerParserSchemes\n */\nexport const parserSchemes: HandlerParserSchemes = async (\n    valueOf, schemes, values\n) => {\n    const\n        /**\n         *  validate data\n         *\n         * @param result_argument - result argument\n         */\n        result_argument = await argument(valueOf ?? true, values ?? {}, schemes),\n\n        /**\n         * check for errors in arguments\n         *\n         * @param responseError - bug check response\n         */\n        responseError = await verifyErrors(result_argument.errors);\n\n    return {\n        schemes: result_argument.argument,\n        args: result_argument.body,\n        errors: responseError.errors,\n        message: responseError.message\n    }\n}\n\n\n/**\n * A Validators class, with functions that allow rigorously validating\n * data, according to a specific pattern (a schema).\n *\n * @remarks\n * A schema determines the validation pattern of a value, and if it\n * does not meet the conditions of the pattern, an exception is\n * thrown with the return of an array of the errors found.\n *\n * @beta\n */\nexport class Validators extends Types implements ValidatorsClass {\n\n    /**\n     * values to be validated\n     * @defaultValue undefined\n     */\n    values: valuesArgs = undefined;\n\n    /**\n     * Object type property. List of validation schemes.\n     * @defaultValue object\n     */\n    schemes: schemes;\n\n    /**\n     * Boolean type property. Determines how validated arguments\n     * and parameters are extracted.\n     * @defaultValue true\n     */\n    valueOf: valueOf = true;\n\n    /**\n     * Creates an instance of Sandwiches.\n     */\n    constructor(schemes?: schemes) {\n        super();\n        this.schemes = schemes ?? null;\n    }\n\n    /**\n     * parse and validate request body data\n     *\n     * @param values - Data subject to validation\n     * @returns ParserSchemesResponse\n     */\n    parserSchemes(values?: valuesArgs): ParserSchemeFunction\n    {\n        return parserSchemes(\n            this.valueOf, this.schemes, this.values ?? values\n        )\n    }\n\n    /**\n     * Reset data:\n     * ```ts\n     *  this.valueOf = true;\n     *  this.schemes = {};\n     *  this.values = undefined;\n     * ```\n     */\n    reset() {\n        this.valueOf = true;\n        this.schemes = null;\n        this.values = undefined;\n    }\n}\n\nexport default Validators;\n","import {\n    ParserSchemeFunction,\n    ParserSchemesClass,\n    valuesArgs,\n    schemes,\n    scheme,\n    FuncResolvePromiseScheme,\n    resolvePromiseScheme\n} from \"../functions/validator\";\nimport Validators from './lettuce'\n\nconst validator = new Validators();\n\n/**\n * addSchemes add schemes\n *\n * @privateRemarks\n * addSchemes function serving the ParserSchemes class for\n * adding validation schemes\n *\n * @param schemes - Validation schemes\n */\nconst addSchemes = (schemes: unknown) => {\n    validator.schemes = Object.assign(validator.schemes ?? {}, schemes);\n}\n\n/**\n * handle the function addScheme, which belongs to the class ParserSchemes\n *\n * @param callBack - receives as argument the resolution function of\n * new Promise, and the value processed in the callback is passed to\n * it, this value is the validation scheme of an element\n */\nconst handlerAddScheme = (callBack: FuncResolvePromiseScheme) => {\n    new Promise((resolve) => {\n        callBack(resolve);\n    }).then((schemes: unknown) => {\n        addSchemes(schemes);\n    });\n}\n\n/**\n * Processes and assigns to validator.schemes the validation\n * schemes declared as property in a class.\n *\n * @param schemesEntries - Matrix of schemes\n *\n * @example\n * Matrix schemes:\n * ```json\n * [\n *  ['name' {type: Type.String, required: true, strict: true}],\n *  ['email' {type: Type.String, required: true, strict: true}]\n * ]\n * ```\n */\nconst addPropertySchemesValidator = <T>(schemesEntries: [keyof T, T[keyof T]][]): Promise<void> => {\n    return new Promise((resolve) => {\n        resolve(Object.fromEntries(schemesEntries));\n    }).then((schemeData) => {\n        validator.schemes = Object.assign(validator.schemes, schemeData);\n    })\n}\n\nexport class ParserSchemes implements ParserSchemesClass {\n\n    /**\n     * instance ParserSchemes\n     */\n    constructor(valueOf?: boolean) {\n        validator.reset();\n        validator.valueOf = valueOf ?? true;\n    }\n\n    /**\n     * Activating the schema validation functions\n     */\n    parserSchemes(values?: valuesArgs): ParserSchemeFunction {\n        return addPropertySchemesValidator(Object.entries(this))\n            .then(()=> validator.parserSchemes(values));\n    }\n\n    /**\n     * add schemes\n     *\n     * @param schemes - Validations schemes\n     */\n    addSchemes(schemes: schemes) {\n        addSchemes(schemes);\n    }\n\n    /**\n     * The addScheme property must be represented in the child class as a function\n     * within this function the schemas are loaded for the validation of the arguments\n     *\n     * @example\n     *```ts\n     * addScheme({type: Sandwich.String, required: true, strict: true}, ['email'])\n     *```\n     * @param scheme - Validations scheme\n     * @param arg - Name of the argument to validate, can be a string or an array of strings.\n     *\n     * @example\n     * example param arg:\n     * ```ts\n     * 'password' or ['password', 'passwordConfirm']\n     * ```\n     *\n     */\n    addScheme(scheme: scheme, arg: string | string[]) {\n        handlerAddScheme((add: resolvePromiseScheme): void => {\n            if(typeof arg == 'string') {\n                add({\n                    [arg]: scheme\n                });\n            } else {\n                let sh = {}\n                for (let i = 1; i <= arg.length; i++) {\n                    sh = {\n                        [arg[i -1]]: scheme,\n                        ...sh\n                    }\n                    if(i == arg.length) add(sh);\n                }\n            }\n        });\n    }\n}\n","import {TypeValid} from \"../functions/validator\";\n\n/**\n * Types of validations\n */\nclass Types implements TypeValid {\n    static String = String\n    static Number = Number\n    static Array = Array\n    static Boolean = Boolean\n    static Object = Object\n    String = String\n    Number = Number\n    Array = Array\n    Boolean = Boolean\n    Object = Object\n}\n\nexport default Types;","import {ResponseVerifyErrors, ErrorStatus} from \"../functions/verifyErrors\";\n\nfunction error(response: ResponseVerifyErrors): ResponseVerifyErrors {\n    throw response;\n}\n\nfunction responseServerError(response: ResponseVerifyErrors, code: number): ResponseVerifyErrors {\n    const {message, errors} = response;\n    throw {\"statusCode\": code, \"message\": message, errors};\n}\n\nexport function exception(response: ResponseVerifyErrors, code: number) {\n    typeof window !== 'undefined'\n    && ({}).toString.call(window) === '[object Window]'\n        ? error(response) : responseServerError(response, code);\n}\n\n/**\n * validate errors and send message\n *\n * @param errors -\n */\nexport async function verifyErrors(\n    errors: ErrorStatus[]\n): Promise<ResponseVerifyErrors | any> {\n\n    const response: ResponseVerifyErrors = {\n        errors: [],\n        message: 'args_validation_successful'\n    }\n\n    if (errors.length) {\n        response.errors = errors;\n        response.message = 'args_validation_errors';\n        exception(response, 400);\n    } else {\n        return response\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Validators from './lettuce';\nimport Types from \"./type\";\nimport {ParserSchemes} from './parserScheme';\n\nexport {\n    ParserSchemes,\n    Types\n}\n\nexport default  Validators;"],"names":[],"sourceRoot":""}